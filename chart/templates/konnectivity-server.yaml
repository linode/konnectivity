---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: konnectivity-server
  namespace: {{ required ".Values.namespace required" .Values.namespace }}
  labels:
    name: konnectivity-server
spec:
  selector:
    matchLabels:
      name: konnectivity-server
  template:
    metadata:
      labels:
        name: konnectivity-server
    spec:
      {{- if .Values.serverNodeSelector }}
      nodeSelector:
{{ toYaml .Values.serverNodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.serverTolerations }}
      tolerations:
{{ toYaml .Values.serverTolerations | indent 8 }}
      {{- end }}
      hostNetwork: true
      containers:
      - name: konnectivity-server-container
        image: {{ .Values.serverImage.repository }}:{{ .Values.serverImage.tag | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.serverImage.pullPolicy }}
        command: ["/proxy-server"]
        args: [
                "--logtostderr=true",
                # This needs to be consistent with the value set in egressSelectorConfiguration.
                "--uds-name=/etc/kubernetes/konnectivity-server/konnectivity-server.socket",
                "--delete-existing-uds-file",
                # The following two lines assume the Konnectivity server is
                # deployed on the same machine as the apiserver, and the certs and
                # key of the API Server are at the specified location.
                "--cluster-cert=/etc/kubernetes/pki/apiserver.crt",
                "--cluster-key=/etc/kubernetes/pki/apiserver.key",
                # This needs to be consistent with the value set in egressSelectorConfiguration.
                "--mode=grpc",
                "--server-port=0",
                {{- if .Values.serverCount }}
                "--server-count={{ .Values.serverCount }}",
                {{- end }}
                "--agent-port={{ .Values.proxyServerPort }}",
                "--admin-port=8133",
                "--health-port=8134",
                "--agent-namespace=kube-system",
                "--agent-service-account=konnectivity-agent",
                "--kubeconfig=/etc/kubernetes/konnectivity-server.conf",
                "--authentication-audience=system:konnectivity-server"
                ]
        livenessProbe:
          httpGet:
            scheme: HTTP
            host: 127.0.0.1
            port: 8134
            path: /healthz
          initialDelaySeconds: 30
          timeoutSeconds: 60
        ports:
        - name: agentport
          containerPort: 8132
          hostPort: {{ .Values.proxyServerPort }}
        - name: adminport
          containerPort: 8133
          hostPort: 8133
        - name: healthport
          containerPort: 8134
          hostPort: 8134
        volumeMounts:
        - name: k8s-certs
          mountPath: /etc/kubernetes/pki
          readOnly: true
        - name: kubeconfig
          mountPath: /etc/kubernetes/konnectivity-server.conf
          readOnly: true
        - name: konnectivity-uds
          mountPath: /etc/kubernetes/konnectivity-server
          readOnly: false
      volumes:
      - name: k8s-certs
        hostPath:
          path: /etc/kubernetes/pki
      - name: kubeconfig
        hostPath:
          path: /etc/kubernetes/konnectivity-server.conf
          type: FileOrCreate
      - name: konnectivity-uds
        hostPath:
          path: /etc/kubernetes/konnectivity-server
          type: DirectoryOrCreate
